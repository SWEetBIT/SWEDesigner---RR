  \subsection{Organizzazione}
    Per ognuno dei periodi descritto dal \emph{Piano di Progetto \VersionePP{}}
    è necessario seguire una verifica mirata al tipo di processo e relativo
    prodotto:
    \begin{itemize}
      \item \textbf{Analisi:} in questo periodo vengono controllati i processi e
      la documentazione prodotta. La verifica dovrà essere eseguita secondo i
      metodi descritti nel documento \emph{Norme di Progetto \VersioneNP{}};
      \item \textbf{Consolidamento dei requisiti:} durante questo periodo sono
      verificati i processi che portano all'incremento dei documenti, e i
      documenti stessi, prodotti durante il periodo di analisi.
      Le procedure di verifica sono descritte nel documento
      \emph{Norme di Progetto \VersioneNP{}};
      \item \textbf{Progettazione Architetturale:} in questo periodo vengono
      verificati i processi, e relativi prodotti, che portano all'incremento dei
      documenti redatti nel precedente periodo di \emph{Consolidamento dei Requisiti};
      sempre in questa fase sono verificati i processi e prodotti riguardanti la
      \emph{Progettazione Architetturale}. Le procedure di verifica sono descritte
      in dettaglio nel documento \emph{Norme di Progetto \VersioneNP{}};
      \item \textbf{Progettazione di Dettaglio e Codifica:} anche in questo
      periodo vengono verificati i processi, e relativi prodotti, che portano
      all'incremento dei documenti del periodo di \emph{Progettazione Architetturale}.
      Vengono verificati processi e prodotti della sotto-fase di codifica. Le
      procedure di verifica sono descritte nel documento
      \emph{Norme di Progetto \VersioneNP{}}.
      \item \textbf{Verifica e Validazione:} sono verificati i processi che
      portano all'aggiornamento della documentazione e i documenti stessi. In
      questo periodo vengono effettuati i test per la validazione del prodotto
      finale.
    \end{itemize}

  \subsection{Pianificazione strategica e temporale}
    Intendendo rispettare le scadenze specificate nel \emph{Piano di Progetto
    \VersionePP{}}, è necessario un approccio organico e ben pianificato alle
    attività di verifica. Deve essere pianificato ogni incremento su
    \glossaryItem{Codice} e documentazione e di conseguenza lo dovranno essere
    tutte le attività di verifica, in modo da avere il tempo di effettuare le
    dovute correzioni. Ogni processo di verifica dovrà essere automatizzato il
    più possibile per poter, dove possibile, risparmiare su risorse umane.
    L'utilizzo di software apposito, e dei metodi per la verifica, sono descritti
    nel documento \emph{Norme di Progetto \VersioneNP{}}.


  \subsection{Gestione delle responsabilità}
    Il \emph{Responsabile di Progetto} e i \emph{Verificatori} hanno la responsabilità delle attività di verifica.
    I compiti di queste figure sono argomento trattato nel documento \emph{Piano di Progetto \VersionePP{}}.

  \subsection{Risorse}
    Si possono identificare due distinti tipi di risorse necessari a garantire la qualità dei prodotti e processi e sono:
    \begin{itemize}
      \item \textbf{Risorse umane:} riguardano i ruoli rivestiti dai vari componenti del gruppo SWEet BIT:
      \begin{itemize}
        \item Responsabile di progetto;
        \item Amministratore;
        \item Analista;
        \item Progettista;
        \item Programmatore;
        \item Verificatore.
      \end{itemize}

		La responsabilità maggiore per l’attività di verifica e validazione ricade sul \emph{Responsabile di Progetto} e sul \emph{Verificatore}. Per una descrizione dettagliata di tutti gli altri ruoli e delle loro responsabilità fare riferimento al \emph{Piano di Progetto \VersionePP{}}.

      \item \textbf{Risorse tecnologiche:} riguardano tutti i software utilizzati per l'automazione delle attività di verifica su prodotti e processi, e l'hardware necessario per eseguire i suddetti software. Nel documento \emph{Norme di Progetto \VersioneNP{}} sono descritti nel dettaglio tutti gli strumenti software utilizzati.
    \end{itemize}

\subsection{Tecniche di analisi}
\subsubsection{Analisi statica}


    




\subsubsection{Analisi dinamica}





\subsection{Misure e metriche}

Le metriche, essendo di natura molto variabile, possono avere due tipologie di range:
\begin{itemize}
\item \textbf{Accettazione}: l'intervallo di valori entro il quale deve trovarsi il risultato della misurazione di un processo, o prodotto, per essere ritenuto accettabile;
\item \textbf{Ottimale}: l'intervallo di valori in cui si deve trovare il risultato della misurazione di un processo, o prodotto, per essere considerato ottimale.
    Questo range è l'obiettivo del gruppo SWEet BIT.
\end{itemize}

\subsubsection{Metriche per i processi}
Le seguenti metriche rappresentano un indicatore volto a monitorare i tempi e i costi associati al progetto. Sono metriche che danno un riscontro immediato sullo stato attuale del progetto, mantenendo il controllo sui processi durante il loro svolgimento.\linebreak
Per ogni metrica indicata è stato definito nelle \emph{Norme di Progetto \VersioneNP{}} come si calcola, e con quale strumento. In \emph{Appendice B} si può visionare il resoconto di tali metriche.

\paragraph{Schedule Variance (SV):} è un indice che dà informazioni necessarie a determinare se ci si trova in anticipo, in ritardo o in linea alle tempistiche delle attività di progetto. Si tratta di un indicatore di efficacia nei confronti del cliente. Se il risultato di tale metrica risulta positivo significa che il progetto sta procedendo con maggior velocità rispetto a quanto pianificato, viceversa
se negativo. Alla fine del progetto questo indice assumerà il valore 0, perchè in quel momento tutte le attività saranno state realizzate.

\paragraph{Budget Variance (BV):} è un indice che dà informazioni necessarie a determinare se vi sono state più o meno spese rispetto al previsto. Si tratta di un indicatore che ha un valore contabile e finanziario. Se il risultato di tale metrica risulta positivo significa che l'attuazione del progetto sta consumando il proprio budget con minor velocità rispetto a quanto pianificato, viceversa se negativo.

\subsubsection{Metriche per i documenti}
La seguente metrica rappresenta un indicatore volto a misurare la complessità con la quale vengono costruite le frasi all'interno dei documenti.
È stato definito nelle \emph{Norme di Progetto \VersioneNP{}} come si calcola, e con quale strumento. In \emph{Appendice B} si può visionare il resoconto di tale metrica.

\paragraph{Indice Gulpease:} è un indice di leggibilità di un testo per la lingua italiana.
Rispetto ad altri ha il vantaggio di utilizzare la lunghezza delle parole in lettere anziché in sillabe, semplificandone il calcolo automatico. Permette di misurare la complessità dello stile di un documento.

\subsubsection{Metriche per il software}
Le presenti metriche rappresentano gli obbiettivi di qualità per il prodotto software da perseguire.
Per ogni metrica indicata è stato definito nelle \emph{Norme di Progetto \VersioneNP{}} come si calcola, e con quale strumento. In \emph{Appendice B} si può visionare il resoconto di tali metriche.

\paragraph{Complessità ciclomatica:} è una metrica per la misura della complessità di funzioni, moduli, metodi o classi di un programma; la quale è calcolata mediate il grafo di controllo di flusso relativo al \glossaryItem{Codice}.
            I nodi del grafo sono gruppi di istruzioni indivisibili. Se nel \glossaryItem{Codice} non sono presenti punti decisionali o cicli, allora la complessità ciclomatica sarà pari a 1.
            Alti valori di complessità ciclomatica implicano una ridotta manutenibilità del codice. Valori bassi di complessità ciclomatica potrebbero però determinare scarsa efficienza dei metodi.

\paragraph{Variabili non utilizzate e/o non definite:} rappresenta il numero di variabili che vengono definite, ma non utilizzate, o viceversa. Questo viene considerato pollution, e pertanto considerato inaccettabile. La misurazione avviene mediante un’analisi dell’AST (Abstract Syntax Tree).

\paragraph{Numero di argomenti per funzione:} rappresenta il numero di argomenti di una funzione. Una funzione con troppi argomenti risulta complessa e poco mantenibile; pertanto è necessario che tale numero sia contenuto.

\paragraph{Linee di codice per linee di commento:} rappresenta il rapporto tra le linee di codice e linee di commento, utile per stimare la manutenibilità del codice.

\paragraph{Copertura del codice:} rappresenta la percentuale di istruzioni che sono eseguite durante i test. Maggiore è la percentuale di istruzioni coperte dai test eseguiti, maggiore sarà la probabilità
che le componenti testate abbiano una ridotta quantità di errori. Il valore di tale indice può essere abbassato da metodi molto semplici che non richiedono testing.